# Le port sur lequel est lancé l'application web (8080 par défaut)
server.port=8989

# Encodage des scripts sql d'initialisation de la BD : data.sql, schema.sql
# cf. https://code.chamo.de/2017/04/21/spring-boot-jpa-encoding-data-sql/
spring.sql.init.encoding=UTF-8

# L'URL de la source de données : SGBD H2 en mémoire vive
spring.datasource.url=jdbc:h2:mem:testdb


# Comment hibernate doit recréér le schéma de la BD
# Hibernate ddl auto (create, create-drop, update, none): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# On recrée automatiquement le schéma relationnel à partir des annotations JPA
spring.jpa.hibernate.ddl-auto=create-drop

# Pour afficher les statistiques d'exécuton SQL dans les logs
#spring.jpa.properties.hibernate.generate_statistics=true
# Log slow queries
#spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=1

# On initialise la BD (data.sql) APRES la création du schéma relationnel
spring.jpa.defer-datasource-initialization=true

# Autres exemples de configuration de la source de données
#spring.datasource.url=jdbc:derby:memory:comptoirs;create=true
#spring.datasource.username=app
#spring.datasource.password=app
#spring.datasource.driver-class-name=org.apache.derby.jdbc.ClientDriver


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Affichage par défaut des erreurs du serveur
server.error.whitelabel.enabled=true

# La console H2 est activée automatiquement si on utilise Spring Boot Dev Tools
spring.h2.console.enabled=true
# L'URL par défaut de la console H2, customisable
#spring.h2.console.path=/h2-console
# Accès à la console depuis l'extérieur
spring.h2.console.settings.web-allow-others=true

# Configuration de la génération de JSON
spring.data.rest.defaultMediaType=application/json

# Pour générer du joli JSON
spring.jackson.serialization.indent-output=true

# L'API REST est exposée à l'url http://localhost:8989/api
spring.data.rest.base-path=api

# Configuration des logs
server.error.include-stacktrace=never
# Logging pour avoir le détail des transactions
logging.level.web=DEBUG
logging.level.ROOT=INFO 
logging.level.org.springframework.orm.jpa=DEBUG 
logging.level.org.springframework.transaction=DEBUG 
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=DEBUG
# Montrer le détail des paramètres HTTP transmis dans les logs
spring.mvc.log-request-details=true
# cf. https://www.baeldung.com/sql-logging-spring-boot
# Configuration des logs SQL JPA
logging.level.org.springframework=INFO
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.show-sql=true

logging.level.comptoirs=INFO
logging.pattern.console=%clr(%-5p)  %cyan(%logger{15}) - %msg %n

#spring.main.allow-bean-definition-overriding=true
# hibernate.enable_lazy_load_no_trans=true